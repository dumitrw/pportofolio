---
import "@styles/global.css"
import BaseHead from "@components/BaseHead.astro"
import Header from "@components/Header.astro"
import Footer from "@components/Footer.astro"
import Drawer from "@components/Drawer.astro"
const { title, description } = Astro.props
import { SITE } from "@consts"
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`${title} | ${SITE.TITLE}`} description={description} />
  </head>
  <body>
    <Header />
    <Drawer />
    <main>
      <div id="transition-screen" class="transition">
        <img id="logo" src="https://i.imgur.com/JaJA3rv.png" alt="Logo" class="logo"/>
      </div>

<!-- Folosim client:only pentru a încărca scriptul doar pe client -->
<Fragment client:only>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const transitionElement = document.getElementById("transition-screen");

      // Verificăm dacă tranzitia a fost deja afișată în această sesiune
      if (transitionElement && !localStorage.getItem("hasVisited")) {
        // Dacă nu a fost vizitat, salvăm în localStorage și arătăm tranzitia
        localStorage.setItem("hasVisited", "true");

        // Așteptăm 4 secunde înainte de a începe tranziția
        setTimeout(() => {
          transitionElement.classList.add("fade-out"); // Aplicăm clasa care va începe tranziția

          // Ascundem tranzitia după 1.5 secunde
          setTimeout(() => {
            transitionElement.classList.add("hidden"); // Ascundem elementul
          }, 1500); // Ajustează durata aici
        }, 4000); // Ajustează durata întârzierii
      } else if (transitionElement) {
        // Dacă a fost vizitat deja, ascundem tranzitia imediat
        transitionElement.classList.add("hidden");
      }
    });
  </script>
</Fragment>



      <slot />
    </main>
    <Footer />
  </body>
</html>

